def find_shortest_path(graph, start, end, path=[]):
    path = path + [start]
    if start==end:
        return path
    if start not in path:
        return None
    shortest = None
    newpath=None
    for node in graph[start]:
        if node not in path:
            newpath = find_shortest_path(graph, node, end, path)
        if newpath:
            if not shortest or len(newpath)< len(shortest):
                shortest = newpath
    return shortest

G={'s':{'u':10, 'x':5},'u':{'v':1, 'x':2},'v':{'y':4}, 'x':{'u':3, 'v':9, 'y':2},
'y':{'s':7, 'v':6}}
print(find_shortest_path(G,'s', 'v'))